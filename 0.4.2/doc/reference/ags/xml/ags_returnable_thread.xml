<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsReturnableThread">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsReturnableThread.top_of_page">AgsReturnableThread</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsReturnableThread</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsReturnableThread.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="AGS-RETURNABLE-THREAD-DEFAULT-JIFFIE:CAPS">AGS_RETURNABLE_THREAD_DEFAULT_JIFFIE</link>
struct              <link linkend="AgsReturnableThread">AgsReturnableThread</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                (<link linkend="AgsReturnableThreadCallback">*AgsReturnableThreadCallback</link>)      (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);
struct              <link linkend="AgsReturnableThreadClass">AgsReturnableThreadClass</link>;
enum                <link linkend="AgsReturnableThreadFlags">AgsReturnableThreadFlags</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-returnable-thread-connect-safe-run">ags_returnable_thread_connect_safe_run</link>
                                                        (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>,
                                                         <parameter><link linkend="AgsReturnableThreadCallback"><type>AgsReturnableThreadCallback</type></link> callback</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-returnable-thread-disconnect-safe-run">ags_returnable_thread_disconnect_safe_run</link>
                                                        (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>);
<link linkend="AgsReturnableThread"><returnvalue>AgsReturnableThread</returnvalue></link> * <link linkend="ags-returnable-thread-new">ags_returnable_thread_new</link>         (<parameter><link linkend="GObject"><type>GObject</type></link> *thread_pool</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-returnable-thread-safe-run">ags_returnable_thread_safe_run</link>      (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsReturnableThread.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsReturnableThread.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AGS-RETURNABLE-THREAD-DEFAULT-JIFFIE:CAPS" role="macro">
<title>AGS_RETURNABLE_THREAD_DEFAULT_JIFFIE</title>
<indexterm zone="AGS-RETURNABLE-THREAD-DEFAULT-JIFFIE:CAPS"><primary>AGS_RETURNABLE_THREAD_DEFAULT_JIFFIE</primary></indexterm>
<programlisting>#define AGS_RETURNABLE_THREAD_DEFAULT_JIFFIE (1000)
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsReturnableThread" role="struct">
<title>struct AgsReturnableThread</title>
<indexterm zone="AgsReturnableThread"><primary>AgsReturnableThread</primary></indexterm>
<programlisting>struct AgsReturnableThread {
  AgsThread thread;

  volatile guint flags;

  GObject *thread_pool;

  pthread_mutex_t reset_mutex;
  volatile void *safe_data;

  gulong handler;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsReturnableThreadCallback" role="function">
<title>AgsReturnableThreadCallback ()</title>
<indexterm zone="AgsReturnableThreadCallback"><primary>AgsReturnableThreadCallback</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                (*AgsReturnableThreadCallback)      (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsReturnableThreadClass" role="struct">
<title>struct AgsReturnableThreadClass</title>
<indexterm zone="AgsReturnableThreadClass"><primary>AgsReturnableThreadClass</primary></indexterm>
<programlisting>struct AgsReturnableThreadClass {
  AgsThreadClass thread;

  void (*safe_run)(AgsReturnableThread *returnable_thread);
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsReturnableThreadFlags" role="enum">
<title>enum AgsReturnableThreadFlags</title>
<indexterm zone="AgsReturnableThreadFlags"><primary>AgsReturnableThreadFlags</primary></indexterm>
<programlisting>typedef enum {
  AGS_RETURNABLE_THREAD_IN_USE              = 1,
  AGS_RETURNABLE_THREAD_RESET               = 1 &lt;&lt; 1,
} AgsReturnableThreadFlags;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-returnable-thread-connect-safe-run" role="function">
<title>ags_returnable_thread_connect_safe_run ()</title>
<indexterm zone="ags-returnable-thread-connect-safe-run"><primary>ags_returnable_thread_connect_safe_run</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_returnable_thread_connect_safe_run
                                                        (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>,
                                                         <parameter><link linkend="AgsReturnableThreadCallback"><type>AgsReturnableThreadCallback</type></link> callback</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-returnable-thread-disconnect-safe-run" role="function">
<title>ags_returnable_thread_disconnect_safe_run ()</title>
<indexterm zone="ags-returnable-thread-disconnect-safe-run"><primary>ags_returnable_thread_disconnect_safe_run</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_returnable_thread_disconnect_safe_run
                                                        (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-returnable-thread-new" role="function">
<title>ags_returnable_thread_new ()</title>
<indexterm zone="ags-returnable-thread-new"><primary>ags_returnable_thread_new</primary></indexterm>
<programlisting><link linkend="AgsReturnableThread"><returnvalue>AgsReturnableThread</returnvalue></link> * ags_returnable_thread_new         (<parameter><link linkend="GObject"><type>GObject</type></link> *thread_pool</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-returnable-thread-safe-run" role="function">
<title>ags_returnable_thread_safe_run ()</title>
<indexterm zone="ags-returnable-thread-safe-run"><primary>ags_returnable_thread_safe_run</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_returnable_thread_safe_run      (<parameter><link linkend="AgsReturnableThread"><type>AgsReturnableThread</type></link> *returnable_thread</parameter>);</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
