<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsGarbageCollector">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsGarbageCollector.top_of_page">AgsGarbageCollector</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsGarbageCollector</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsGarbageCollector.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>struct              <link linkend="AgsGarbageCollector">AgsGarbageCollector</link>;
struct              <link linkend="AgsGarbageCollectorClass">AgsGarbageCollectorClass</link>;
enum                <link linkend="AgsGarbageCollectorFlags">AgsGarbageCollectorFlags</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-garbage-collector-add">ags_garbage_collector_add</link>           (<parameter><link linkend="AgsGarbageCollector"><type>AgsGarbageCollector</type></link> *garbage_collector</parameter>,
                                                         <parameter><link linkend="AgsRecycling"><type>AgsRecycling</type></link> *recycling</parameter>);
<link linkend="AgsGarbageCollector"><returnvalue>AgsGarbageCollector</returnvalue></link> * <link linkend="ags-garbage-collector-new">ags_garbage_collector_new</link>         ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-garbage-collector-remove">ags_garbage_collector_remove</link>        (<parameter><link linkend="AgsGarbageCollector"><type>AgsGarbageCollector</type></link> *garbage_collector</parameter>,
                                                         <parameter><link linkend="AgsRecycling"><type>AgsRecycling</type></link> *recycling</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-garbage-collector-run">ags_garbage_collector_run</link>           (<parameter><link linkend="AgsGarbageCollector"><type>AgsGarbageCollector</type></link> *garbage_collector</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsGarbageCollector.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsGarbageCollector.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AgsGarbageCollector" role="struct">
<title>struct AgsGarbageCollector</title>
<indexterm zone="AgsGarbageCollector"><primary>AgsGarbageCollector</primary></indexterm>
<programlisting>struct AgsGarbageCollector {
  GObject object;

  guint32 flags;

  GObject *devout;

  GList *list; // data of type AgsRecycling
  GList *stopped;
  GList *start;
  GList *end;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsGarbageCollectorClass" role="struct">
<title>struct AgsGarbageCollectorClass</title>
<indexterm zone="AgsGarbageCollectorClass"><primary>AgsGarbageCollectorClass</primary></indexterm>
<programlisting>struct AgsGarbageCollectorClass {
  GObjectClass object;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsGarbageCollectorFlags" role="enum">
<title>enum AgsGarbageCollectorFlags</title>
<indexterm zone="AgsGarbageCollectorFlags"><primary>AgsGarbageCollectorFlags</primary></indexterm>
<programlisting>typedef enum {
  AGS_GARBAGE_COLLECTOR_RUN         = 1, // cancel flag of ags_garbage_collector run
  AGS_GARBAGE_COLLECTOR_CANCEL_RUN  = 1 &lt;&lt;  1, // used by ags_garbage_collector_remove to remove the current (stopped) AgsRecycling while ags_garbage_collector_run is running
} AgsGarbageCollectorFlags;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-garbage-collector-add" role="function">
<title>ags_garbage_collector_add ()</title>
<indexterm zone="ags-garbage-collector-add"><primary>ags_garbage_collector_add</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_garbage_collector_add           (<parameter><link linkend="AgsGarbageCollector"><type>AgsGarbageCollector</type></link> *garbage_collector</parameter>,
                                                         <parameter><link linkend="AgsRecycling"><type>AgsRecycling</type></link> *recycling</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-garbage-collector-new" role="function">
<title>ags_garbage_collector_new ()</title>
<indexterm zone="ags-garbage-collector-new"><primary>ags_garbage_collector_new</primary></indexterm>
<programlisting><link linkend="AgsGarbageCollector"><returnvalue>AgsGarbageCollector</returnvalue></link> * ags_garbage_collector_new         ();</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-garbage-collector-remove" role="function">
<title>ags_garbage_collector_remove ()</title>
<indexterm zone="ags-garbage-collector-remove"><primary>ags_garbage_collector_remove</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_garbage_collector_remove        (<parameter><link linkend="AgsGarbageCollector"><type>AgsGarbageCollector</type></link> *garbage_collector</parameter>,
                                                         <parameter><link linkend="AgsRecycling"><type>AgsRecycling</type></link> *recycling</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-garbage-collector-run" role="function">
<title>ags_garbage_collector_run ()</title>
<indexterm zone="ags-garbage-collector-run"><primary>ags_garbage_collector_run</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_garbage_collector_run           (<parameter><link linkend="AgsGarbageCollector"><type>AgsGarbageCollector</type></link> *garbage_collector</parameter>);</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
