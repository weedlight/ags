<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsRecallAudioSignal">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsRecallAudioSignal.top_of_page">AgsRecallAudioSignal</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsRecallAudioSignal</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsRecallAudioSignal.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>struct              <link linkend="AgsRecallAudioSignal">AgsRecallAudioSignal</link>;
struct              <link linkend="AgsRecallAudioSignalClass">AgsRecallAudioSignalClass</link>;
enum                <link linkend="AgsRecallAudioSignalFlags">AgsRecallAudioSignalFlags</link>;
<link linkend="AgsRecallAudioSignal"><returnvalue>AgsRecallAudioSignal</returnvalue></link> * <link linkend="ags-recall-audio-signal-new">ags_recall_audio_signal_new</link>      (<parameter><link linkend="AgsAudioSignal"><type>AgsAudioSignal</type></link> *destination</parameter>,
                                                         <parameter><link linkend="AgsAudioSignal"><type>AgsAudioSignal</type></link> *source</parameter>,
                                                         <parameter><link linkend="AgsDevout"><type>AgsDevout</type></link> *devout</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsRecallAudioSignal.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsRecallAudioSignal.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AgsRecallAudioSignal" role="struct">
<title>struct AgsRecallAudioSignal</title>
<indexterm zone="AgsRecallAudioSignal"><primary>AgsRecallAudioSignal</primary></indexterm>
<programlisting>struct AgsRecallAudioSignal {
  AgsRecall recall;

  guint flags;

  guint audio_channel;

  AgsAudioSignal *destination;

  AgsAudioSignal *source;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsRecallAudioSignalClass" role="struct">
<title>struct AgsRecallAudioSignalClass</title>
<indexterm zone="AgsRecallAudioSignalClass"><primary>AgsRecallAudioSignalClass</primary></indexterm>
<programlisting>struct AgsRecallAudioSignalClass {
  AgsRecallClass recall;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsRecallAudioSignalFlags" role="enum">
<title>enum AgsRecallAudioSignalFlags</title>
<indexterm zone="AgsRecallAudioSignalFlags"><primary>AgsRecallAudioSignalFlags</primary></indexterm>
<programlisting>typedef enum {
  AGS_RECALL_AUDIO_SIGNAL_INITIAL_RUN      = 1,
} AgsRecallAudioSignalFlags;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-recall-audio-signal-new" role="function">
<title>ags_recall_audio_signal_new ()</title>
<indexterm zone="ags-recall-audio-signal-new"><primary>ags_recall_audio_signal_new</primary></indexterm>
<programlisting><link linkend="AgsRecallAudioSignal"><returnvalue>AgsRecallAudioSignal</returnvalue></link> * ags_recall_audio_signal_new      (<parameter><link linkend="AgsAudioSignal"><type>AgsAudioSignal</type></link> *destination</parameter>,
                                                         <parameter><link linkend="AgsAudioSignal"><type>AgsAudioSignal</type></link> *source</parameter>,
                                                         <parameter><link linkend="AgsDevout"><type>AgsDevout</type></link> *devout</parameter>);</programlisting>
<para>
Creates an <link linkend="AgsRecallAudioSignal"><type>AgsRecallAudioSignal</type></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>a new <link linkend="AgsRecallAudioSignal"><type>AgsRecallAudioSignal</type></link>.</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
