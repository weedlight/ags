<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsThreadPool">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsThreadPool.top_of_page">AgsThreadPool</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsThreadPool</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsThreadPool.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>struct              <link linkend="AgsThreadPool">AgsThreadPool</link>;
struct              <link linkend="AgsThreadPoolClass">AgsThreadPoolClass</link>;
enum                <link linkend="AgsThreadPoolFlags">AgsThreadPoolFlags</link>;
<link linkend="AgsThreadPool"><returnvalue>AgsThreadPool</returnvalue></link> *     <link linkend="ags-thread-pool-new">ags_thread_pool_new</link>                 (<parameter><link linkend="AgsThread"><type>AgsThread</type></link> *parent</parameter>);
<link linkend="AgsThread"><returnvalue>AgsThread</returnvalue></link> *         <link linkend="ags-thread-pool-pull">ags_thread_pool_pull</link>                (<parameter><link linkend="AgsThreadPool"><type>AgsThreadPool</type></link> *thread_pool</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-thread-pool-start">ags_thread_pool_start</link>               (<parameter><link linkend="AgsThreadPool"><type>AgsThreadPool</type></link> *thread_pool</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsThreadPool.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsThreadPool.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AgsThreadPool" role="struct">
<title>struct AgsThreadPool</title>
<indexterm zone="AgsThreadPool"><primary>AgsThreadPool</primary></indexterm>
<programlisting>struct AgsThreadPool {
  GObject object;

  volatile guint flags;

  volatile guint max_unused_threads;
  volatile guint max_threads;

  pthread_t thread;

  pthread_mutex_t creation_mutex;
  pthread_cond_t creation_cond;

  volatile guint n_threads;
  volatile guint newly_pulled;
  volatile guint queued;

  AgsThread *parent;
  volatile GList *returnable_thread;
  volatile GList *running_thread;

  pthread_mutex_t pull_mutex;

  pthread_mutex_t return_mutex;
  pthread_cond_t return_cond;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsThreadPoolClass" role="struct">
<title>struct AgsThreadPoolClass</title>
<indexterm zone="AgsThreadPoolClass"><primary>AgsThreadPoolClass</primary></indexterm>
<programlisting>struct AgsThreadPoolClass {
  GObjectClass object;

  void (*start)(AgsThreadPool *thread_pool);
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsThreadPoolFlags" role="enum">
<title>enum AgsThreadPoolFlags</title>
<indexterm zone="AgsThreadPoolFlags"><primary>AgsThreadPoolFlags</primary></indexterm>
<programlisting>typedef enum {
  AGS_THREAD_POOL_RUNNING  = 1,
  AGS_THREAD_POOL_READY    = 1 &lt;&lt; 1,
} AgsThreadPoolFlags;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-thread-pool-new" role="function">
<title>ags_thread_pool_new ()</title>
<indexterm zone="ags-thread-pool-new"><primary>ags_thread_pool_new</primary></indexterm>
<programlisting><link linkend="AgsThreadPool"><returnvalue>AgsThreadPool</returnvalue></link> *     ags_thread_pool_new                 (<parameter><link linkend="AgsThread"><type>AgsThread</type></link> *parent</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-thread-pool-pull" role="function">
<title>ags_thread_pool_pull ()</title>
<indexterm zone="ags-thread-pool-pull"><primary>ags_thread_pool_pull</primary></indexterm>
<programlisting><link linkend="AgsThread"><returnvalue>AgsThread</returnvalue></link> *         ags_thread_pool_pull                (<parameter><link linkend="AgsThreadPool"><type>AgsThreadPool</type></link> *thread_pool</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-thread-pool-start" role="function">
<title>ags_thread_pool_start ()</title>
<indexterm zone="ags-thread-pool-start"><primary>ags_thread_pool_start</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_thread_pool_start               (<parameter><link linkend="AgsThreadPool"><type>AgsThreadPool</type></link> *thread_pool</parameter>);</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
