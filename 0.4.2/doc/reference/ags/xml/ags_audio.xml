<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsAudio">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsAudio.top_of_page">AgsAudio</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsAudio</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsAudio.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>struct              <link linkend="AgsAudio">AgsAudio</link>;
struct              <link linkend="AgsAudioClass">AgsAudioClass</link>;
enum                <link linkend="AgsAudioFlags">AgsAudioFlags</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-add-recall">ags_audio_add_recall</link>                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> play</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-add-recall-container">ags_audio_add_recall_container</link>      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_container</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-add-recall-id">ags_audio_add_recall_id</link>             (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-cancel">ags_audio_cancel</link>                    (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-done">ags_audio_done</link>                      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-duplicate-recall">ags_audio_duplicate_recall</link>          (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-init-recall">ags_audio_init_recall</link>               (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> stage</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);
<link linkend="AgsRecallID"><returnvalue>AgsRecallID</returnvalue></link> *       <link linkend="ags-audio-init-run">ags_audio_init_run</link>                  (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="ags-audio-is-playing">ags_audio_is_playing</link>                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>);
<link linkend="AgsAudio"><returnvalue>AgsAudio</returnvalue></link> *          <link linkend="ags-audio-new">ags_audio_new</link>                       ();
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-open-files">ags_audio_open_files</link>                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *filenames</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> overwrite_channels</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> create_channels</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-play">ags_audio_play</link>                      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> stage</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-recall-change-state">ags_audio_recall_change_state</link>       (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> enable</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link> *             <link linkend="ags-audio-recursive-play-init">ags_audio_recursive_play_init</link>       (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> playback</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> sequencer</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> notation</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-remove-recall">ags_audio_remove_recall</link>             (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> play</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-remove-recall-container">ags_audio_remove_recall_container</link>   (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_container</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-remove-recall-id">ags_audio_remove_recall_id</link>          (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-resolve-recall">ags_audio_resolve_recall</link>            (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-set-audio-channels">ags_audio_set_audio_channels</link>        (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> audio_channels</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-set-devout">ags_audio_set_devout</link>                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *devout</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-set-flags">ags_audio_set_flags</link>                 (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> flags</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-set-pads">ags_audio_set_pads</link>                  (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GType"><type>GType</type></link> type</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> pads</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-set-sequence-length">ags_audio_set_sequence_length</link>       (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> sequence_length</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-tact">ags_audio_tact</link>                      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-unset-flags">ags_audio_unset_flags</link>               (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> flags</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsAudio.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsAudio.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AgsAudio" role="struct">
<title>struct AgsAudio</title>
<indexterm zone="AgsAudio"><primary>AgsAudio</primary></indexterm>
<programlisting>struct AgsAudio {
  GObject object;

  guint flags;

  GObject *devout;
  guint level;
  
  guint sequence_length;
  guint audio_channels;
  guint frequence;

  guint output_pads;
  guint output_lines;

  guint input_pads;
  guint input_lines;

  AgsChannel *output;
  AgsChannel *input;

  gpointer devout_play_domain;

  GList *notation;

  GList *recall_id;

  GList *container;

  GList *recall;
  GList *play;

  GList *recall_remove; //TODO:JK: verify deprecation
  GList *play_remove; //TODO:JK: verify deprecation

  GtkWidget *machine;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsAudioClass" role="struct">
<title>struct AgsAudioClass</title>
<indexterm zone="AgsAudioClass"><primary>AgsAudioClass</primary></indexterm>
<programlisting>struct AgsAudioClass {
  GObjectClass object;

  void (*set_audio_channels)(AgsAudio *audio,
			     guint audio_channels, guint audio_channels_old);
  void (*set_pads)(AgsAudio *audio,
		   GType type,
		   guint pads, guint pads_old);

  AgsRecallID* (*init_run)(AgsAudio *audio);
  void (*tact)(AgsAudio *audio, AgsRecallID *recall_id);
  void (*done)(AgsAudio *audio, AgsRecallID *recall_id);
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsAudioFlags" role="enum">
<title>enum AgsAudioFlags</title>
<indexterm zone="AgsAudioFlags"><primary>AgsAudioFlags</primary></indexterm>
<programlisting>typedef enum {
  AGS_AUDIO_OUTPUT_HAS_RECYCLING        = 1,
  AGS_AUDIO_INPUT_HAS_RECYCLING         = 1 &lt;&lt;  1,
  AGS_AUDIO_INPUT_TAKES_FILE            = 1 &lt;&lt;  2,
  AGS_AUDIO_HAS_NOTATION                = 1 &lt;&lt;  3,
  AGS_AUDIO_SYNC                        = 1 &lt;&lt;  4, // can be combined with below
  AGS_AUDIO_ASYNC                       = 1 &lt;&lt;  5,
  AGS_AUDIO_RUNNING                     = 1 &lt;&lt;  6,
  AGS_AUDIO_PLAYING                     = 1 &lt;&lt;  7,
  AGS_AUDIO_NOTATION_DEFAULT            = 1 &lt;&lt;  8,
} AgsAudioFlags;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-add-recall" role="function">
<title>ags_audio_add_recall ()</title>
<indexterm zone="ags-audio-add-recall"><primary>ags_audio_add_recall</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_add_recall                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> play</parameter>);</programlisting>
<para>
Adds a recall.
</para></refsect2>
<refsect2 id="ags-audio-add-recall-container" role="function">
<title>ags_audio_add_recall_container ()</title>
<indexterm zone="ags-audio-add-recall-container"><primary>ags_audio_add_recall_container</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_add_recall_container      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_container</parameter>);</programlisting>
<para>
Adds a recall container.
</para></refsect2>
<refsect2 id="ags-audio-add-recall-id" role="function">
<title>ags_audio_add_recall_id ()</title>
<indexterm zone="ags-audio-add-recall-id"><primary>ags_audio_add_recall_id</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_add_recall_id             (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_id</parameter>);</programlisting>
<para>
Adds a recall id.
</para></refsect2>
<refsect2 id="ags-audio-cancel" role="function">
<title>ags_audio_cancel ()</title>
<indexterm zone="ags-audio-cancel"><primary>ags_audio_cancel</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_cancel                    (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);</programlisting>
<para>
Cancel processing audio data.
</para></refsect2>
<refsect2 id="ags-audio-done" role="function">
<title>ags_audio_done ()</title>
<indexterm zone="ags-audio-done"><primary>ags_audio_done</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_done                      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-duplicate-recall" role="function">
<title>ags_audio_duplicate_recall ()</title>
<indexterm zone="ags-audio-duplicate-recall"><primary>ags_audio_duplicate_recall</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_duplicate_recall          (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);</programlisting>
<para>
Duplicate all <link linkend="AgsRecall"><type>AgsRecall</type></link> templates of this <link linkend="AgsAudio"><type>AgsAudio</type></link>.
</para></refsect2>
<refsect2 id="ags-audio-init-recall" role="function">
<title>ags_audio_init_recall ()</title>
<indexterm zone="ags-audio-init-recall"><primary>ags_audio_init_recall</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_init_recall               (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> stage</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);</programlisting>
<para>
Initializes the recalls of <parameter>audio</parameter>
</para></refsect2>
<refsect2 id="ags-audio-init-run" role="function">
<title>ags_audio_init_run ()</title>
<indexterm zone="ags-audio-init-run"><primary>ags_audio_init_run</primary></indexterm>
<programlisting><link linkend="AgsRecallID"><returnvalue>AgsRecallID</returnvalue></link> *       ags_audio_init_run                  (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>);</programlisting>
<para>
Is emitted as playing audio is done.
</para></refsect2>
<refsect2 id="ags-audio-is-playing" role="function">
<title>ags_audio_is_playing ()</title>
<indexterm zone="ags-audio-is-playing"><primary>ags_audio_is_playing</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            ags_audio_is_playing                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>);</programlisting>
<para>
Determine if <link linkend="AgsAudio"><type>AgsAudio</type></link> is playing.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>TRUE if it's playing otherwise FALSE</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ags-audio-new" role="function">
<title>ags_audio_new ()</title>
<indexterm zone="ags-audio-new"><primary>ags_audio_new</primary></indexterm>
<programlisting><link linkend="AgsAudio"><returnvalue>AgsAudio</returnvalue></link> *          ags_audio_new                       ();</programlisting>
<para>
Creates a <link linkend="AgsAudio"><type>AgsAudio</type></link>, with defaults of <parameter>devout</parameter>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>a new <link linkend="AgsAudio"><type>AgsAudio</type></link></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ags-audio-open-files" role="function">
<title>ags_audio_open_files ()</title>
<indexterm zone="ags-audio-open-files"><primary>ags_audio_open_files</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_open_files                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *filenames</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> overwrite_channels</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> create_channels</parameter>);</programlisting>
<para>
Open some files.
</para></refsect2>
<refsect2 id="ags-audio-play" role="function">
<title>ags_audio_play ()</title>
<indexterm zone="ags-audio-play"><primary>ags_audio_play</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_play                      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> stage</parameter>);</programlisting>
<para>
Performs on single play call of appropriate stage.
</para></refsect2>
<refsect2 id="ags-audio-recall-change-state" role="function">
<title>ags_audio_recall_change_state ()</title>
<indexterm zone="ags-audio-recall-change-state"><primary>ags_audio_recall_change_state</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_recall_change_state       (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> enable</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-recursive-play-init" role="function">
<title>ags_audio_recursive_play_init ()</title>
<indexterm zone="ags-audio-recursive-play-init"><primary>ags_audio_recursive_play_init</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link> *             ags_audio_recursive_play_init       (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> playback</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> sequencer</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> notation</parameter>);</programlisting>
<para>
Initializes <link linkend="AgsAudio"><type>AgsAudio</type></link> in order to do playback, sequencer or notation.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>a list containing all <link linkend="AgsRecallID"><type>AgsRecallID</type></link></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ags-audio-remove-recall" role="function">
<title>ags_audio_remove_recall ()</title>
<indexterm zone="ags-audio-remove-recall"><primary>ags_audio_remove_recall</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_remove_recall             (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> play</parameter>);</programlisting>
<para>
Removes a recall.
</para></refsect2>
<refsect2 id="ags-audio-remove-recall-container" role="function">
<title>ags_audio_remove_recall_container ()</title>
<indexterm zone="ags-audio-remove-recall-container"><primary>ags_audio_remove_recall_container</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_remove_recall_container   (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_container</parameter>);</programlisting>
<para>
Removes a recall container.
</para></refsect2>
<refsect2 id="ags-audio-remove-recall-id" role="function">
<title>ags_audio_remove_recall_id ()</title>
<indexterm zone="ags-audio-remove-recall-id"><primary>ags_audio_remove_recall_id</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_remove_recall_id          (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *recall_id</parameter>);</programlisting>
<para>
Removes a recall id.
</para></refsect2>
<refsect2 id="ags-audio-resolve-recall" role="function">
<title>ags_audio_resolve_recall ()</title>
<indexterm zone="ags-audio-resolve-recall"><primary>ags_audio_resolve_recall</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_resolve_recall            (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);</programlisting>
<para>
Performs resolving of recalls.
</para></refsect2>
<refsect2 id="ags-audio-set-audio-channels" role="function">
<title>ags_audio_set_audio_channels ()</title>
<indexterm zone="ags-audio-set-audio-channels"><primary>ags_audio_set_audio_channels</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_set_audio_channels        (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> audio_channels</parameter>);</programlisting>
<para>
Resize audio channels AgsInput will be allocated first.
</para></refsect2>
<refsect2 id="ags-audio-set-devout" role="function">
<title>ags_audio_set_devout ()</title>
<indexterm zone="ags-audio-set-devout"><primary>ags_audio_set_devout</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_set_devout                (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GObject"><type>GObject</type></link> *devout</parameter>);</programlisting>
<para>
Sets a devout object on audio.
</para></refsect2>
<refsect2 id="ags-audio-set-flags" role="function">
<title>ags_audio_set_flags ()</title>
<indexterm zone="ags-audio-set-flags"><primary>ags_audio_set_flags</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_set_flags                 (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> flags</parameter>);</programlisting>
<para>
Disable a feature of AgsAudio.
</para></refsect2>
<refsect2 id="ags-audio-set-pads" role="function">
<title>ags_audio_set_pads ()</title>
<indexterm zone="ags-audio-set-pads"><primary>ags_audio_set_pads</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_set_pads                  (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="GType"><type>GType</type></link> type</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> pads</parameter>);</programlisting>
<para>
Sets pad count for the apropriate <parameter>type</parameter>
</para></refsect2>
<refsect2 id="ags-audio-set-sequence-length" role="function">
<title>ags_audio_set_sequence_length ()</title>
<indexterm zone="ags-audio-set-sequence-length"><primary>ags_audio_set_sequence_length</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_set_sequence_length       (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> sequence_length</parameter>);</programlisting>
<para>
Sets sequence length.
</para></refsect2>
<refsect2 id="ags-audio-tact" role="function">
<title>ags_audio_tact ()</title>
<indexterm zone="ags-audio-tact"><primary>ags_audio_tact</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_tact                      (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="AgsRecallID"><type>AgsRecallID</type></link> *recall_id</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-unset-flags" role="function">
<title>ags_audio_unset_flags ()</title>
<indexterm zone="ags-audio-unset-flags"><primary>ags_audio_unset_flags</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_unset_flags               (<parameter><link linkend="AgsAudio"><type>AgsAudio</type></link> *audio</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> flags</parameter>);</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
