<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsRegistry">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsRegistry.top_of_page">AgsRegistry</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsRegistry</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsRegistry.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="AGS-REGISTRY-DEFAULT-ID-LENGTH:CAPS">AGS_REGISTRY_DEFAULT_ID_LENGTH</link>
struct              <link linkend="AgsRegistry">AgsRegistry</link>;
struct              <link linkend="AgsRegistryClass">AgsRegistryClass</link>;
struct              <link linkend="AgsRegistryEntry">AgsRegistryEntry</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-registry-add">ags_registry_add</link>                    (<parameter><link linkend="AgsRegistry"><type>AgsRegistry</type></link> *registry</parameter>,
                                                         <parameter><link linkend="AgsRegistryEntry"><type>AgsRegistryEntry</type></link> *registry_entry</parameter>);
<link linkend="AgsRegistryEntry"><returnvalue>AgsRegistryEntry</returnvalue></link> *  <link linkend="ags-registry-entry-alloc">ags_registry_entry_alloc</link>            (<parameter><link linkend="AgsRegistry"><type>AgsRegistry</type></link> *registry</parameter>);
<link linkend="xmlrpc-value"><returnvalue>xmlrpc_value</returnvalue></link> *      <link linkend="ags-registry-entry-bulk">ags_registry_entry_bulk</link>             (<parameter><link linkend="xmlrpc-env"><type>xmlrpc_env</type></link> *env</parameter>,
                                                         <parameter><link linkend="xmlrpc-value"><type>xmlrpc_value</type></link> *param_array</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *server_info</parameter>);
<link linkend="AgsRegistryEntry"><returnvalue>AgsRegistryEntry</returnvalue></link> *  <link linkend="ags-registry-entry-find">ags_registry_entry_find</link>             (<parameter><link linkend="AgsRegistry"><type>AgsRegistry</type></link> *registry</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *id</parameter>);
<link linkend="AgsRegistry"><returnvalue>AgsRegistry</returnvalue></link> *       <link linkend="ags-registry-new">ags_registry_new</link>                    ();
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsRegistry.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsRegistry.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AGS-REGISTRY-DEFAULT-ID-LENGTH:CAPS" role="macro">
<title>AGS_REGISTRY_DEFAULT_ID_LENGTH</title>
<indexterm zone="AGS-REGISTRY-DEFAULT-ID-LENGTH:CAPS"><primary>AGS_REGISTRY_DEFAULT_ID_LENGTH</primary></indexterm>
<programlisting>#define AGS_REGISTRY_DEFAULT_ID_LENGTH 16
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsRegistry" role="struct">
<title>struct AgsRegistry</title>
<indexterm zone="AgsRegistry"><primary>AgsRegistry</primary></indexterm>
<programlisting>struct AgsRegistry {
  GObject object;

  guint flags;

  pthread_mutex_t mutex;

  AgsFile *previous;
  AgsFile *current;

#ifdef AGS_WITH_XMLRPC_C
  xmlrpc_registry *registry;
#endif

  GObject *server;

  guint id_length;
  guint counter;

  GList *entry;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsRegistryClass" role="struct">
<title>struct AgsRegistryClass</title>
<indexterm zone="AgsRegistryClass"><primary>AgsRegistryClass</primary></indexterm>
<programlisting>struct AgsRegistryClass {
  GObjectClass object;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsRegistryEntry" role="struct">
<title>struct AgsRegistryEntry</title>
<indexterm zone="AgsRegistryEntry"><primary>AgsRegistryEntry</primary></indexterm>
<programlisting>struct AgsRegistryEntry {
  gchar *id;
  GValue entry;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-registry-add" role="function">
<title>ags_registry_add ()</title>
<indexterm zone="ags-registry-add"><primary>ags_registry_add</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_registry_add                    (<parameter><link linkend="AgsRegistry"><type>AgsRegistry</type></link> *registry</parameter>,
                                                         <parameter><link linkend="AgsRegistryEntry"><type>AgsRegistryEntry</type></link> *registry_entry</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-registry-entry-alloc" role="function">
<title>ags_registry_entry_alloc ()</title>
<indexterm zone="ags-registry-entry-alloc"><primary>ags_registry_entry_alloc</primary></indexterm>
<programlisting><link linkend="AgsRegistryEntry"><returnvalue>AgsRegistryEntry</returnvalue></link> *  ags_registry_entry_alloc            (<parameter><link linkend="AgsRegistry"><type>AgsRegistry</type></link> *registry</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-registry-entry-bulk" role="function">
<title>ags_registry_entry_bulk ()</title>
<indexterm zone="ags-registry-entry-bulk"><primary>ags_registry_entry_bulk</primary></indexterm>
<programlisting><link linkend="xmlrpc-value"><returnvalue>xmlrpc_value</returnvalue></link> *      ags_registry_entry_bulk             (<parameter><link linkend="xmlrpc-env"><type>xmlrpc_env</type></link> *env</parameter>,
                                                         <parameter><link linkend="xmlrpc-value"><type>xmlrpc_value</type></link> *param_array</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *server_info</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-registry-entry-find" role="function">
<title>ags_registry_entry_find ()</title>
<indexterm zone="ags-registry-entry-find"><primary>ags_registry_entry_find</primary></indexterm>
<programlisting><link linkend="AgsRegistryEntry"><returnvalue>AgsRegistryEntry</returnvalue></link> *  ags_registry_entry_find             (<parameter><link linkend="AgsRegistry"><type>AgsRegistry</type></link> *registry</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *id</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-registry-new" role="function">
<title>ags_registry_new ()</title>
<indexterm zone="ags-registry-new"><primary>ags_registry_new</primary></indexterm>
<programlisting><link linkend="AgsRegistry"><returnvalue>AgsRegistry</returnvalue></link> *       ags_registry_new                    ();</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
