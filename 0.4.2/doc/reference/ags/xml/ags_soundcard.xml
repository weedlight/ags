<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsSoundcard">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsSoundcard.top_of_page">AgsSoundcard</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsSoundcard</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsSoundcard.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>typedef             <link linkend="AgsSoundcard">AgsSoundcard</link>;
struct              <link linkend="AgsSoundcardInterface">AgsSoundcardInterface</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-soundcard-list-cards">ags_soundcard_list_cards</link>            (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>,
                                                         <parameter><link linkend="GList"><type>GList</type></link> **card_id</parameter>,
                                                         <parameter><link linkend="GList"><type>GList</type></link> **card_name</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-soundcard-offset-changed">ags_soundcard_offset_changed</link>        (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> note_offset</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-soundcard-pcm-info">ags_soundcard_pcm_info</link>              (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *card_id</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *channels_min</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *channels_max</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *rate_min</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *rate_max</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *buffer_size_min</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *buffer_size_max</parameter>,
                                                         <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-soundcard-tic">ags_soundcard_tic</link>                   (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsSoundcard.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsSoundcard.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AgsSoundcard" role="typedef">
<title>AgsSoundcard</title>
<indexterm zone="AgsSoundcard"><primary>AgsSoundcard</primary></indexterm>
<programlisting>typedef void AgsSoundcard;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsSoundcardInterface" role="struct">
<title>struct AgsSoundcardInterface</title>
<indexterm zone="AgsSoundcardInterface"><primary>AgsSoundcardInterface</primary></indexterm>
<programlisting>struct AgsSoundcardInterface {
  GTypeInterface interface;

  void (*list_cards)(AgsSoundcard *soundcard,
		     GList **card_id, GList **card_name);
  void (*pcm_info)(AgsSoundcard *soundcard, gchar *card_id,
		   guint *channels_min, guint *channels_max,
		   guint *rate_min, guint *rate_max,
		   guint *buffer_size_min, guint *buffer_size_max,
		   GError **error);

  void (*play_init)(AgsSoundcard *soundcard,
		    GError **error);
  void (*play)(AgsSoundcard *soundcard,
	       GError **error);
  void (*stop)(AgsSoundcard *soundcard);

  void (*tic)(AgsSoundcard *soundcard);
  void (*offset_changed)(AgsSoundcard *soundcard, guint note_offset);
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-soundcard-list-cards" role="function">
<title>ags_soundcard_list_cards ()</title>
<indexterm zone="ags-soundcard-list-cards"><primary>ags_soundcard_list_cards</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_soundcard_list_cards            (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>,
                                                         <parameter><link linkend="GList"><type>GList</type></link> **card_id</parameter>,
                                                         <parameter><link linkend="GList"><type>GList</type></link> **card_name</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-soundcard-offset-changed" role="function">
<title>ags_soundcard_offset_changed ()</title>
<indexterm zone="ags-soundcard-offset-changed"><primary>ags_soundcard_offset_changed</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_soundcard_offset_changed        (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> note_offset</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-soundcard-pcm-info" role="function">
<title>ags_soundcard_pcm_info ()</title>
<indexterm zone="ags-soundcard-pcm-info"><primary>ags_soundcard_pcm_info</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_soundcard_pcm_info              (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *card_id</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *channels_min</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *channels_max</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *rate_min</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *rate_max</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *buffer_size_min</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> *buffer_size_max</parameter>,
                                                         <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-soundcard-tic" role="function">
<title>ags_soundcard_tic ()</title>
<indexterm zone="ags-soundcard-tic"><primary>ags_soundcard_tic</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_soundcard_tic                   (<parameter><link linkend="AgsSoundcard"><type>AgsSoundcard</type></link> *soundcard</parameter>);</programlisting>
<para>
Callback when counter expires minor note offset.
</para></refsect2>

</refsect1>

</refentry>
