<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-AgsAudioFile">
<refmeta>
<refentrytitle role="top_of_page" id="ags-AgsAudioFile.top_of_page">AgsAudioFile</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AgsAudioFile</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-AgsAudioFile.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>struct              <link linkend="AgsAudioFile">AgsAudioFile</link>;
struct              <link linkend="AgsAudioFileClass">AgsAudioFileClass</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-file-close">ags_audio_file_close</link>                (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-file-flush">ags_audio_file_flush</link>                (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);
<link linkend="AgsAudioFile"><returnvalue>AgsAudioFile</returnvalue></link> *      <link linkend="ags-audio-file-new">ags_audio_file_new</link>                  (<parameter><link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                                         <parameter><link linkend="AgsDevout"><type>AgsDevout</type></link> *devout</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> start_channel</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> audio_channels</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="ags-audio-file-open">ags_audio_file_open</link>                 (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="ags-audio-file-open-from-data">ags_audio_file_open_from_data</link>       (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *data</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-file-read-audio-signal">ags_audio_file_read_audio_signal</link>    (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="ags-audio-file-rw-open">ags_audio_file_rw_open</link>              (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> create</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-file-seek">ags_audio_file_seek</link>                 (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> frames</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> whence</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="ags-audio-file-write">ags_audio_file_write</link>                (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter>signed <link linkend="short"><type>short</type></link> *buffer</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> buffer_size</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-AgsAudioFile.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-AgsAudioFile.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AgsAudioFile" role="struct">
<title>struct AgsAudioFile</title>
<indexterm zone="AgsAudioFile"><primary>AgsAudioFile</primary></indexterm>
<programlisting>struct AgsAudioFile {
  GObject object;

  AgsDevout *devout;

  gchar *name;
  guint samplerate;
  guint frames;
  guint channels;
  guint format;

  guint start_channel;
  guint audio_channels;

  GList *audio_signal;

  GObject *file;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="AgsAudioFileClass" role="struct">
<title>struct AgsAudioFileClass</title>
<indexterm zone="AgsAudioFileClass"><primary>AgsAudioFileClass</primary></indexterm>
<programlisting>struct AgsAudioFileClass {
  GObjectClass object;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-close" role="function">
<title>ags_audio_file_close ()</title>
<indexterm zone="ags-audio-file-close"><primary>ags_audio_file_close</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_file_close                (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-flush" role="function">
<title>ags_audio_file_flush ()</title>
<indexterm zone="ags-audio-file-flush"><primary>ags_audio_file_flush</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_file_flush                (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-new" role="function">
<title>ags_audio_file_new ()</title>
<indexterm zone="ags-audio-file-new"><primary>ags_audio_file_new</primary></indexterm>
<programlisting><link linkend="AgsAudioFile"><returnvalue>AgsAudioFile</returnvalue></link> *      ags_audio_file_new                  (<parameter><link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                                                         <parameter><link linkend="AgsDevout"><type>AgsDevout</type></link> *devout</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> start_channel</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> audio_channels</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-open" role="function">
<title>ags_audio_file_open ()</title>
<indexterm zone="ags-audio-file-open"><primary>ags_audio_file_open</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            ags_audio_file_open                 (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-open-from-data" role="function">
<title>ags_audio_file_open_from_data ()</title>
<indexterm zone="ags-audio-file-open-from-data"><primary>ags_audio_file_open_from_data</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            ags_audio_file_open_from_data       (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *data</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-read-audio-signal" role="function">
<title>ags_audio_file_read_audio_signal ()</title>
<indexterm zone="ags-audio-file-read-audio-signal"><primary>ags_audio_file_read_audio_signal</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_file_read_audio_signal    (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-rw-open" role="function">
<title>ags_audio_file_rw_open ()</title>
<indexterm zone="ags-audio-file-rw-open"><primary>ags_audio_file_rw_open</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            ags_audio_file_rw_open              (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> create</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-seek" role="function">
<title>ags_audio_file_seek ()</title>
<indexterm zone="ags-audio-file-seek"><primary>ags_audio_file_seek</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_file_seek                 (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> frames</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> whence</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="ags-audio-file-write" role="function">
<title>ags_audio_file_write ()</title>
<indexterm zone="ags-audio-file-write"><primary>ags_audio_file_write</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                ags_audio_file_write                (<parameter><link linkend="AgsAudioFile"><type>AgsAudioFile</type></link> *audio_file</parameter>,
                                                         <parameter>signed <link linkend="short"><type>short</type></link> *buffer</parameter>,
                                                         <parameter><link linkend="guint"><type>guint</type></link> buffer_size</parameter>);</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
