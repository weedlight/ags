<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="ags-jmath">
<refmeta>
<refentrytitle role="top_of_page" id="ags-jmath.top_of_page">jmath</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  AGS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>jmath</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ags-jmath.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="char"><returnvalue>char</returnvalue></link> *              <link linkend="j-math-algebra-brackeds-out">j_math_algebra_brackeds_out</link>         (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="char"><returnvalue>char</returnvalue></link> *              <link linkend="j-math-algebra-functions-out">j_math_algebra_functions_out</link>        (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="char"><returnvalue>char</returnvalue></link> *              <link linkend="j-math-algebra-operations-out">j_math_algebra_operations_out</link>       (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link> *               <link linkend="j-math-algebra-solve">j_math_algebra_solve</link>                (<parameter><link linkend="char"><type>char</type></link> *string</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *operation</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-and">j_math_and</link>                          (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);
<link linkend="JList"><returnvalue>JList</returnvalue></link> *             <link linkend="j-math-cut-leading-zeros">j_math_cut_leading_zeros</link>            (<parameter><link linkend="JList"><type>JList</type></link> *value</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-exclusive-or">j_math_exclusive_or</link>                 (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-exp">j_math_exp</link>                          (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-exp2">j_math_exp2</link>                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link> *               <link linkend="j-math-gauss">j_math_gauss</link>                        (<parameter><link linkend="char"><type>char</type></link> **string</parameter>,
                                                         <parameter><link linkend="uint"><type>uint</type></link> count</parameter>);
<link linkend="char"><returnvalue>char</returnvalue></link> *              <link linkend="j-math-get-first-level-operator">j_math_get_first_level_operator</link>     (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="char"><returnvalue>char</returnvalue></link> *              <link linkend="j-math-get-second-level-operator">j_math_get_second_level_operator</link>    (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            <link linkend="j-math-is-function">j_math_is_function</link>                  (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            <link linkend="j-math-is-function-backward">j_math_is_function_backward</link>         (<parameter><link linkend="char"><type>char</type></link> *start</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            <link linkend="j-math-is-operator">j_math_is_operator</link>                  (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            <link linkend="j-math-less">j_math_less</link>                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="j-math-make-valid">j_math_make_valid</link>                   (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            <link linkend="j-math-more">j_math_more</link>                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-or">j_math_or</link>                           (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="j-math-put-null-at-beginning">j_math_put_null_at_beginning</link>        (<parameter><link linkend="int"><type>int</type></link> *array</parameter>,
                                                         <parameter><link linkend="uint"><type>uint</type></link> size</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="j-math-put-null-at-end">j_math_put_null_at_end</link>              (<parameter><link linkend="int"><type>int</type></link> *array</parameter>,
                                                         <parameter><link linkend="uint"><type>uint</type></link> size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-root">j_math_root</link>                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-root2">j_math_root2</link>                        (<parameter><link linkend="int"><type>int</type></link> a</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="j-math-solve-arithmetic">j_math_solve_arithmetic</link>             (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link> *               <link linkend="j-math-sort-array">j_math_sort_array</link>                   (<parameter><link linkend="int"><type>int</type></link> *array</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> size</parameter>);
<link linkend="uint"><returnvalue>uint</returnvalue></link>                <link linkend="j-math-width">j_math_width</link>                        (<parameter><link linkend="int"><type>int</type></link> a</parameter>);
<link linkend="JList"><returnvalue>JList</returnvalue></link> *             <link linkend="j-math-width-list">j_math_width_list</link>                   (<parameter><link linkend="JList"><type>JList</type></link> *list</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ags-jmath.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ags-jmath.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="j-math-algebra-brackeds-out" role="function">
<title>j_math_algebra_brackeds_out ()</title>
<indexterm zone="j-math-algebra-brackeds-out"><primary>j_math_algebra_brackeds_out</primary></indexterm>
<programlisting><link linkend="char"><returnvalue>char</returnvalue></link> *              j_math_algebra_brackeds_out         (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-algebra-functions-out" role="function">
<title>j_math_algebra_functions_out ()</title>
<indexterm zone="j-math-algebra-functions-out"><primary>j_math_algebra_functions_out</primary></indexterm>
<programlisting><link linkend="char"><returnvalue>char</returnvalue></link> *              j_math_algebra_functions_out        (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-algebra-operations-out" role="function">
<title>j_math_algebra_operations_out ()</title>
<indexterm zone="j-math-algebra-operations-out"><primary>j_math_algebra_operations_out</primary></indexterm>
<programlisting><link linkend="char"><returnvalue>char</returnvalue></link> *              j_math_algebra_operations_out       (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-algebra-solve" role="function">
<title>j_math_algebra_solve ()</title>
<indexterm zone="j-math-algebra-solve"><primary>j_math_algebra_solve</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link> *               j_math_algebra_solve                (<parameter><link linkend="char"><type>char</type></link> *string</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *operation</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-and" role="function">
<title>j_math_and ()</title>
<indexterm zone="j-math-and"><primary>j_math_and</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_and                          (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-cut-leading-zeros" role="function">
<title>j_math_cut_leading_zeros ()</title>
<indexterm zone="j-math-cut-leading-zeros"><primary>j_math_cut_leading_zeros</primary></indexterm>
<programlisting><link linkend="JList"><returnvalue>JList</returnvalue></link> *             j_math_cut_leading_zeros            (<parameter><link linkend="JList"><type>JList</type></link> *value</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-exclusive-or" role="function">
<title>j_math_exclusive_or ()</title>
<indexterm zone="j-math-exclusive-or"><primary>j_math_exclusive_or</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_exclusive_or                 (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-exp" role="function">
<title>j_math_exp ()</title>
<indexterm zone="j-math-exp"><primary>j_math_exp</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_exp                          (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-exp2" role="function">
<title>j_math_exp2 ()</title>
<indexterm zone="j-math-exp2"><primary>j_math_exp2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_exp2                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-gauss" role="function">
<title>j_math_gauss ()</title>
<indexterm zone="j-math-gauss"><primary>j_math_gauss</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link> *               j_math_gauss                        (<parameter><link linkend="char"><type>char</type></link> **string</parameter>,
                                                         <parameter><link linkend="uint"><type>uint</type></link> count</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-get-first-level-operator" role="function">
<title>j_math_get_first_level_operator ()</title>
<indexterm zone="j-math-get-first-level-operator"><primary>j_math_get_first_level_operator</primary></indexterm>
<programlisting><link linkend="char"><returnvalue>char</returnvalue></link> *              j_math_get_first_level_operator     (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-get-second-level-operator" role="function">
<title>j_math_get_second_level_operator ()</title>
<indexterm zone="j-math-get-second-level-operator"><primary>j_math_get_second_level_operator</primary></indexterm>
<programlisting><link linkend="char"><returnvalue>char</returnvalue></link> *              j_math_get_second_level_operator    (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-is-function" role="function">
<title>j_math_is_function ()</title>
<indexterm zone="j-math-is-function"><primary>j_math_is_function</primary></indexterm>
<programlisting><link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            j_math_is_function                  (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-is-function-backward" role="function">
<title>j_math_is_function_backward ()</title>
<indexterm zone="j-math-is-function-backward"><primary>j_math_is_function_backward</primary></indexterm>
<programlisting><link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            j_math_is_function_backward         (<parameter><link linkend="char"><type>char</type></link> *start</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-is-operator" role="function">
<title>j_math_is_operator ()</title>
<indexterm zone="j-math-is-operator"><primary>j_math_is_operator</primary></indexterm>
<programlisting><link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            j_math_is_operator                  (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-less" role="function">
<title>j_math_less ()</title>
<indexterm zone="j-math-less"><primary>j_math_less</primary></indexterm>
<programlisting><link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            j_math_less                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-make-valid" role="function">
<title>j_math_make_valid ()</title>
<indexterm zone="j-math-make-valid"><primary>j_math_make_valid</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                j_math_make_valid                   (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-more" role="function">
<title>j_math_more ()</title>
<indexterm zone="j-math-more"><primary>j_math_more</primary></indexterm>
<programlisting><link linkend="jboolean"><returnvalue>jboolean</returnvalue></link>            j_math_more                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-or" role="function">
<title>j_math_or ()</title>
<indexterm zone="j-math-or"><primary>j_math_or</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_or                           (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-put-null-at-beginning" role="function">
<title>j_math_put_null_at_beginning ()</title>
<indexterm zone="j-math-put-null-at-beginning"><primary>j_math_put_null_at_beginning</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                j_math_put_null_at_beginning        (<parameter><link linkend="int"><type>int</type></link> *array</parameter>,
                                                         <parameter><link linkend="uint"><type>uint</type></link> size</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-put-null-at-end" role="function">
<title>j_math_put_null_at_end ()</title>
<indexterm zone="j-math-put-null-at-end"><primary>j_math_put_null_at_end</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                j_math_put_null_at_end              (<parameter><link linkend="int"><type>int</type></link> *array</parameter>,
                                                         <parameter><link linkend="uint"><type>uint</type></link> size</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-root" role="function">
<title>j_math_root ()</title>
<indexterm zone="j-math-root"><primary>j_math_root</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_root                         (<parameter><link linkend="int"><type>int</type></link> a</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> b</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-root2" role="function">
<title>j_math_root2 ()</title>
<indexterm zone="j-math-root2"><primary>j_math_root2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_root2                        (<parameter><link linkend="int"><type>int</type></link> a</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-solve-arithmetic" role="function">
<title>j_math_solve_arithmetic ()</title>
<indexterm zone="j-math-solve-arithmetic"><primary>j_math_solve_arithmetic</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 j_math_solve_arithmetic             (<parameter><link linkend="char"><type>char</type></link> *string</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-sort-array" role="function">
<title>j_math_sort_array ()</title>
<indexterm zone="j-math-sort-array"><primary>j_math_sort_array</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link> *               j_math_sort_array                   (<parameter><link linkend="int"><type>int</type></link> *array</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> size</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-width" role="function">
<title>j_math_width ()</title>
<indexterm zone="j-math-width"><primary>j_math_width</primary></indexterm>
<programlisting><link linkend="uint"><returnvalue>uint</returnvalue></link>                j_math_width                        (<parameter><link linkend="int"><type>int</type></link> a</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="j-math-width-list" role="function">
<title>j_math_width_list ()</title>
<indexterm zone="j-math-width-list"><primary>j_math_width_list</primary></indexterm>
<programlisting><link linkend="JList"><returnvalue>JList</returnvalue></link> *             j_math_width_list                   (<parameter><link linkend="JList"><type>JList</type></link> *list</parameter>);</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
